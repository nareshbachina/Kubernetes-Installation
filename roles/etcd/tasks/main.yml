---
- name: Creating the directories for etcd
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
  with_items:
    - "{{ etcd_download_directory }}"
    - "{{ etcd_download_directory }}"
    - "{{ etcd_data_directory }}"

- name: Check if etcd binary exists at the required location
  stat:
    path: "{{ etcd_binary_directory }}"
  register: etcd_binary_exists

- name: Check if etcd binary version matches with the required version
  shell: etcd --version | grep -i etcd | awk '{print $3}'
  register: etcd_version_check
  when: etcd_binary_exists.stat.exists == True

- name: debug
  debug:
    var=etcd_version_check

- name: Download the etcd archive file
  get_url:
    url: "{{ etcd_download_url }}"
    dest: "{{ etcd_download_directory }}"
  when: etcd_version_check.rc == 0 and etcd_version_check.stdout != etcd_version

- name: Extracting the etcd archive file
  unarchive:
    copy: no
    src: "{{ etcd_download_directory }}/{{ etcd_archive_file_name }}.tar.gz"
    dest: "{{ etcd_download_directory }}"
    creates: "{{ etcd_download_directory }}/{{ etcd_archive_file_name }}"
  when: etcd_version_check.rc == 0 and etcd_version_check.stdout != etcd_version

- name: Move the etcd binary to PATH variable locations
  copy:
    src: "{{ etcd_download_directory }}/{{ etcd_archive_file_name }}/etcd"
    dest: "{{ etcd_binary_directory }}"
    owner: root
    group: root
    mode: "a+x"
    remote_src: yes
  when: etcd_version_check.rc == 0 and etcd_version_check.stdout != etcd_version

- name: Downloading the Certificate Authority key and certificate files from S3
  aws_s3:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    bucket: "{{ s3_bucket_name }}"
    object: "/ca/{{ item }}"
    dest: "{{ etcd_conf_directory }}/{{ item }}"
    mode: get
    overwrite: different
  with_items:
    - ca.crt
    - ca.key

- name: Creating the Private Key for the etcd-server
  openssl_privatekey:
   path: "{{ etcd_conf_directory }}/etcd-server.key"
   type: "RSA"
   size: 2048

- name: Creating the Ceritificate Signing Request for the created Private Key
  openssl_csr:
    path: "{{ etcd_conf_directory }}/etcd-server.csr"
    privatekey_path: "{{ etcd_conf_directory }}/etcd-server.key"
    common_name: "etcd-server"
    subject_alt_name: "IP:172.31.17.66,IP:172.31.10.163,IP:127.0.0.1"
  
- name: Generate an OpenSSL certificate signed with our own CA certificate
  openssl_certificate:
    path: "{{ etcd_conf_directory }}/etcd-server.crt"
    csr_path: "{{ etcd_conf_directory }}/etcd-server.csr"
    ownca_path: "{{ etcd_conf_directory }}/ca.crt"
    ownca_privatekey_path: "{{ etcd_conf_directory }}/ca.key"
    provider: ownca

- name: Uploading the Etcd Server key and certificate from s3
  aws_s3:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    bucket: "{{ s3_bucket_name }}"
    object: "/etcd/{{ item }}"
    src: "{{ etcd_conf_directory }}/{{ item }}"
    mode: put
    overwrite: different
  with_items:
    - "etcd-server.key"
    - "etcd-server.crt"

- name: Creating the etcd systemd service unit file
  template:
    src: "etcd.service.j2"
    dest: "/etc/systemd/system/etcd.service"
    owner: root
    group: root
  notify: 
    - systemd reload

- name: Creating the etcd configuration file
  template:
    src: "etcd.yml.j2"
    dest: "{{ etcd_conf_directory }}/etcd.yml"
    owner: root
    group: root
  notify:
    - restart the etcd service

- name: Enabling and start the etcd service
  service:
    name: etcd
    enabled: yes
    state: started

- name: Removing the Certificate Authority Private Key from the Server
  file:
    path: "{{ etcd_conf_directory}}/ca.key"
    state: absent
